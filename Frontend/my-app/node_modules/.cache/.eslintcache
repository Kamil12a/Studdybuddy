[{"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/index.js":"1","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/reportWebVitals.js":"2","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/App.js":"3","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/personalDate.js":"4","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/universitySection.js":"5","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/Forum.js":"6","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signIn/SignIn.js":"7","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/AboutYourForm.js":"8","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/yourGroups/YourGroups.js":"9","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/searchingGroups/SearchingGroups.js":"10","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/personalDateStyles.js":"11","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/universitySectionStyles.js":"12","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/Post.js":"13","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/ForumLook.js":"14","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/NavBar.js":"15","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/ModalToCreatePost.js":"16","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signIn/SignInLook.js":"17","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/searchingGroups/ModalSearching.js":"18","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/global/Groups.js":"19","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/global/subjectToChoose.js":"20"},{"size":478,"mtime":1639759738357,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1639759738361,"results":"23","hashOfConfig":"22"},{"size":1227,"mtime":1639759738357,"results":"24","hashOfConfig":"22"},{"size":3131,"mtime":1639759738357,"results":"25","hashOfConfig":"22"},{"size":4172,"mtime":1640211486277,"results":"26","hashOfConfig":"22"},{"size":1872,"mtime":1639759738357,"results":"27","hashOfConfig":"22"},{"size":129,"mtime":1639759738357,"results":"28","hashOfConfig":"22"},{"size":5339,"mtime":1639759738357,"results":"29","hashOfConfig":"22"},{"size":4647,"mtime":1639759738357,"results":"30","hashOfConfig":"22"},{"size":4039,"mtime":1639759738357,"results":"31","hashOfConfig":"22"},{"size":2366,"mtime":1640210716098,"results":"32","hashOfConfig":"22"},{"size":2585,"mtime":1640211601188,"results":"33","hashOfConfig":"22"},{"size":1827,"mtime":1639759738357,"results":"34","hashOfConfig":"22"},{"size":1297,"mtime":1639759738357,"results":"35","hashOfConfig":"22"},{"size":2192,"mtime":1639759738357,"results":"36","hashOfConfig":"22"},{"size":2257,"mtime":1639759738357,"results":"37","hashOfConfig":"22"},{"size":4550,"mtime":1640209636616,"results":"38","hashOfConfig":"22"},{"size":1949,"mtime":1639759738357,"results":"39","hashOfConfig":"22"},{"size":2685,"mtime":1639759738357,"results":"40","hashOfConfig":"22"},{"size":2493,"mtime":1639759738357,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1blhfh7",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/index.js",[],["87","88"],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/reportWebVitals.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/App.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/personalDate.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/universitySection.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/Forum.js",["89"],"import React, { useEffect } from \"react\";\nimport { Navbar } from \"../NavBar\";\nimport { Button } from \"@material-ui/core/\";\nimport { useStyles } from \"./ForumLook\";\nimport Post from \"./Post\";\nimport ModalToCreatePost from \"./ModalToCreatePost\";\nimport { useState } from \"react\";\nexport default function Forum() {\n  const [modalStatus, setModalStatus] = useState(false);\n  const [stateOfPosts, setStateOfPosts] = useState([\n   \n  ]);\n\n  const classes = useStyles();\n  useEffect(() => {\n    console.log(stateOfPosts);\n  }, []);\n  const openModal = () => {\n    modalStatus ? setModalStatus(false) : setModalStatus(true);\n  };\n  return (\n    <>\n      <Navbar />\n      <div className={classes.forum}>\n        <Button\n          onClick={openModal}\n          className={classes.submitButton}\n          variant=\"contained\"\n        >\n          Create Post\n        </Button>\n        {modalStatus && (\n          <>\n            <ModalToCreatePost\n              setStateOfPosts={setStateOfPosts}\n              stateOfPosts={stateOfPosts}\n              setState={setModalStatus}\n            />\n          </>\n        )}\n        {!modalStatus && (\n          <div className={classes.containerOfPost}>\n            <Post\n              userName={\"Patryk Kowalski\"}\n              \n                title= {\"What do you think about Pitagoras?\"}\n                question=\n                  {\"Does his statement work in all cases? Even if we take quantum space?\"}\n                      \n            />\n            {console.log(stateOfPosts)}\n            {stateOfPosts.map((item, index) => {\n              return (\n                <Post\n                  userName={\"Kamil Plewka\"}\n                  key={index}\n                  title={item.title}\n                  question={item.question}\n                />\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signIn/SignIn.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/AboutYourForm.js",["90","91"],"import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useStyles } from \"./universitySectionStyles\";\nimport { useHistory } from \"react-router-dom\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function AboutYouForm() {\n  let history = useHistory();\n  const [checked, setChecked] = React.useState([false, false]);\n  const [checked1, setChecked1] = React.useState([false, false]);\n  const [checked2, setChecked2] = React.useState([false, false]);\n  const [drench, setdrench] = React.useState(false);\n  const classes = useStyles();\n  const FieldTofilled = ({ question, fill }) => (\n    <div>\n      <Grid className={classes.chooseAvatarAndName}>\n        <Typography component=\"p\" variant=\"p\">\n          {question}\n        </Typography>\n        <TextField\n          className={classes.chooseName}\n          label={fill}\n          variant=\"outlined\"\n        />\n      </Grid>\n    </div>\n  );\n  const submitPersonForm = (e) => {\n    e.preventDefault();\n    history.push(\"/forum\");\n  };\n\n  const handleChangeCheckbox = (e) => {\n    if (e.target.value === \"1\") {\n      setChecked([false, true]);\n    } else {\n      setChecked([true, false]);\n    }\n  };\n  const handleChangeCheckbox1 = (e) => {\n    if (e.target.value === \"1\") {\n      setChecked1([false, true]);\n    } else {\n      setChecked1([true, false]);\n    }\n  };\n  const handleChangeCheckbox2 = (e) => {\n    if (e.target.value === \"1\") {\n      setChecked2([false, true]);\n      setdrench(false);\n    } else {\n      setChecked2([true, false]);\n      setdrench(true);\n    }\n  };\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <div className={classes.imageBackground}>\n        <Grid item className={classes.image} />\n      </div>{\" \"}\n      <Grid item component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <form onSubmit={submitPersonForm} className={classes.rightSide}>\n            <Typography className={classes.title}  component=\"h5\" variant=\"h3\">\n              Let's get to know each other better!\n            </Typography>\n\n            <div className={classes.oneLaneToFill}>\n              <div className={classes.selectYourPosition}>\n                <InputLabel>\n                  Do you have experience in giving tutoring / teaching?\n                </InputLabel>\n                <FormControlLabel\n                  value={0}\n                  checked={checked[0]}\n                  onChange={handleChangeCheckbox}\n                  className={classes.checkbox}\n                  control={<Checkbox />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={1}\n                  checked={checked[1]}\n                  onChange={handleChangeCheckbox}\n                  control={<Checkbox />}\n                  label=\"No\"\n                />\n              </div>\n            </div>\n            <div className={classes.oneLaneToFill}>\n              <div className={classes.selectYourPosition}>\n                <InputLabel>\n                  Have you ever failed any subject during your studies?\n                </InputLabel>\n                <FormControlLabel\n                  value={0}\n                  checked={checked2[0]}\n                  onChange={handleChangeCheckbox2}\n                  className={classes.checkbox}\n                  control={<Checkbox />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={1}\n                  checked={checked2[1]}\n                  onChange={handleChangeCheckbox2}\n                  control={<Checkbox />}\n                  label=\"No\"\n                />\n              </div>\n            </div>\n            {drench && (\n              <>\n                <FieldTofilled\n                  question={\"What subject\"}\n                  fill={\"What subject\"}\n                />\n              </>\n            )}\n            <div className={classes.oneLaneToFill}>\n              <div className={classes.selectYourPosition}>\n                <InputLabel>\n                  What would you like to achieve with this application?{\" \"}\n                </InputLabel>\n\n                <TextField\n                  style={{ marginLeft: \"20px\", width: \"400px\" }}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  name=\"password\"\n                  label=\"achieve\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n              </div>\n            </div>\n            <div className={classes.submitSection}>\n              <Button\n                type=\"submit\"\n                className={classes.submitButton}\n                variant=\"contained\"\n              >\n                Next\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/yourGroups/YourGroups.js",["92"],"import { Navbar } from \"../NavBar\";\nimport Groups from \"../global/Groups\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SubjectToChoose from \"../global/subjectToChoose\";\nconst useStyles = makeStyles((theme) => ({\n  containerOfGroups: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    gap: \"20px\",\n  },\n  titleOfGroupsSearching: {\n    marginTop: \"100px\",\n  },\n  groupsContainer: {\n    textAlign: \"center\",\n  },\n  submitButton: {\n    textAlign: \"center\",\n    background: theme.palette.primary.main,\n    width: \"200px\",\n    height: \"70px\",\n  },\n  submitButtonSection: {\n    position: \"absolute\",\n    top: \"100px\",\n    left: \"50px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    marginTop: \"100px\",\n    padding: \"40px\",\n    width: \"50vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"20px\",\n    alignItems: \"center\",\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  chooseName: {\n    width: \"40vw\",\n  },\n}));\nexport const YourGroups = () => {\n  const classes = useStyles();\n  const [createGroupStatus, setCreateGroupStatus] = useState(true);\n  const [yourGroups, setYourGroups] = useState([\n    {\n      title: \"Mathematical Discrete\",\n      question:\n        \"We study math in our sophomore year and it's super cool on campus on Fridays Saturdays online\",\n      btnText: \"leave the group\",\n    },\n    {\n      title: \"Mathematical \",\n      question:\n        \"We study math in our sophomore year and it's super cool on campus on Fridays Saturdays online\",\n      btnText: \"leave the group\",\n    },\n    {\n      title: \"Mathematical Discrete\",\n      question:\n        \"We study math in our sophomore year and it's super cool on campus on Fridays Saturdays online\",\n      btnText: \"leave the group\",\n    },\n  ]);\n  const deleteGroup = (e) => {\n    let allGroups = yourGroups;\n    allGroups = allGroups.filter((item, index) => {\n      if (index.toString() !== e.currentTarget.id.toString()) {\n        return item;\n      }\n    });\n    setYourGroups(allGroups);\n  };\n  const createGroupOpenModal = () => {\n    createGroupStatus\n      ? setCreateGroupStatus(false)\n      : setCreateGroupStatus(true);\n  };\n  return (\n    <>\n      <Navbar />\n      <div className={classes.submitButtonSection}>\n        <Button\n          onClick={createGroupOpenModal}\n          className={classes.submitButton}\n          variant=\"contained\"\n        >\n          Create a new group\n        </Button>\n      </div>\n      {createGroupStatus && (\n        <>\n          <div className={classes.groupsContainer}>\n            <Typography\n              className={classes.titleOfGroupsSearching}\n              component=\"h1\"\n              variant=\"h2\"\n            >\n              Your Groups{\" \"}\n            </Typography>\n          </div>\n          <div className={classes.containerOfGroups}>\n            {yourGroups.map((item, index) => {\n              return (\n                <Groups\n                  key={index}\n                  idOfButton={index}\n                  question={item.question}\n                  title={item.title}\n                  btnText={item.btnText}\n                  groupEvent={deleteGroup}\n                />\n              );\n            })}\n          </div>\n        </>\n      )}\n      {!createGroupStatus && (\n        <>\n          <div className={classes.container}>\n            <Paper className={classes.paper} elevation={6}>\n              <Typography component=\"h1\" variant=\"h4\">\n                Create the new Group{\" \"}\n              </Typography>\n              <TextField\n                className={classes.chooseName}\n                label=\"Tittle of your group\"\n                variant=\"outlined\"\n                name={\"title\"}\n              />\n              <TextField\n                className={classes.chooseName}\n                label=\"Describe your group?\"\n                variant=\"outlined\"\n                name={\"question\"}\n                multiline\n                rows={3}\n                rowsMax={6}\n              />\n              <TextField\n                className={classes.chooseName}\n                label=\"ADD HASZTAGS!\"\n                variant=\"outlined\"\n                name={\"hasztag\"}\n              />\n              <SubjectToChoose />\n              <Button onClick={createGroupOpenModal}variant=\"contained\">Submit </Button>\n            </Paper>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/searchingGroups/SearchingGroups.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/personalDateStyles.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/universitySectionStyles.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/Post.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/ForumLook.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/NavBar.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/ModalToCreatePost.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signIn/SignInLook.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/searchingGroups/ModalSearching.js",["93","94","95","96","97","98"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport SubjectToChoose from \"../global/subjectToChoose\";\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: \"100px\",\n    textAlign: \"center\",\n    padding: \"40px\",\n    width: \"900px\",\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  chooseSubject: {\n    width: \"40%\",\n  },\n  textFieldSection: {\n    marginTop: \"20px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"20px\",\n    justifyContent: \"center\",\n  },\n  submitButton: {\n    textAlign: \"center\",\n    height: \"50px\",\n    width: \"170px\",\n    marginTop: \"20px\",\n    background: theme.palette.primary.main,\n  },\n}));\n\nexport default function ModalSearching({setStatusOfSearching}) {\n  const classes = useStyles();\n  const [generalState, setGeneralState] = React.useState(\"\");\n  const [topicState, setTopicState] = React.useState(\"\");\n\n  const handleChange = (e) => {\n    if (e.target.name === \"general\") {\n      setGeneralState(e.target.value);\n    } else {\n      setTopicState(e.target.value);\n    }\n  };\n  const startSearching=()=>{\n    setStatusOfSearching(true)\n  }\n  return (\n    <>\n      <div className={classes.container}>\n        <Paper className={classes.paper} elevation={6}>\n          <Typography component=\"h5\" variant=\"h3\">\n            What are you looking for\n          </Typography>\n\n          <SubjectToChoose/>\n          <Button\n           onClick={startSearching}\n            className={classes.submitButton}\n            variant=\"contained\"\n          >\n            Search Group\n          </Button>\n        </Paper>\n      </div>\n    </>\n  );\n}\n","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/global/Groups.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/global/subjectToChoose.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":17,"column":6,"nodeType":"105","endLine":17,"endColumn":8,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":17,"column":10,"nodeType":"109","messageId":"110","endLine":17,"endColumn":18},{"ruleId":"107","severity":1,"message":"111","line":47,"column":9,"nodeType":"109","messageId":"110","endLine":47,"endColumn":30},{"ruleId":"112","severity":1,"message":"113","line":77,"column":48,"nodeType":"114","messageId":"115","endLine":77,"endColumn":50},{"ruleId":"107","severity":1,"message":"116","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":14},{"ruleId":"107","severity":1,"message":"117","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":18},{"ruleId":"107","severity":1,"message":"118","line":8,"column":8,"nodeType":"109","messageId":"110","endLine":8,"endColumn":16},{"ruleId":"107","severity":1,"message":"119","line":42,"column":10,"nodeType":"109","messageId":"110","endLine":42,"endColumn":22},{"ruleId":"107","severity":1,"message":"120","line":43,"column":10,"nodeType":"109","messageId":"110","endLine":43,"endColumn":20},{"ruleId":"107","severity":1,"message":"121","line":45,"column":9,"nodeType":"109","messageId":"110","endLine":45,"endColumn":21},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stateOfPosts'. Either include it or remove the dependency array.","ArrayExpression",["124"],"no-unused-vars","'checked1' is assigned a value but never used.","Identifier","unusedVar","'handleChangeCheckbox1' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Select' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'generalState' is assigned a value but never used.","'topicState' is assigned a value but never used.","'handleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [stateOfPosts]",{"range":"127","text":"128"},[520,522],"[stateOfPosts]"]