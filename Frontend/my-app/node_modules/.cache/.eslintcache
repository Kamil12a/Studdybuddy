[{"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/index.js":"1","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/reportWebVitals.js":"2","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/App.js":"3","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/personalDate.js":"4","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/universitySection.js":"5","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/Forum.js":"6","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signIn/SignIn.js":"7","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/AboutYourForm.js":"8","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/yourGroups/YourGroups.js":"9","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/searchingGroups/SearchingGroups.js":"10","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/personalDateStyles.js":"11","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/universitySectionStyles.js":"12","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/Post.js":"13","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/ForumLook.js":"14","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/NavBar.js":"15","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/ModalToCreatePost.js":"16","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signIn/SignInLook.js":"17","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/searchingGroups/ModalSearching.js":"18","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/global/Groups.js":"19","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/global/subjectToChoose.js":"20","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/global/ToolBar.js":"21"},{"size":478,"mtime":1640212599192,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1640212599192,"results":"24","hashOfConfig":"23"},{"size":1227,"mtime":1640212599192,"results":"25","hashOfConfig":"23"},{"size":3131,"mtime":1640212599192,"results":"26","hashOfConfig":"23"},{"size":4172,"mtime":1640212599192,"results":"27","hashOfConfig":"23"},{"size":2233,"mtime":1640253267715,"results":"28","hashOfConfig":"23"},{"size":129,"mtime":1640212599192,"results":"29","hashOfConfig":"23"},{"size":5339,"mtime":1640212599192,"results":"30","hashOfConfig":"23"},{"size":4647,"mtime":1640212599192,"results":"31","hashOfConfig":"23"},{"size":5408,"mtime":1640254599220,"results":"32","hashOfConfig":"23"},{"size":2366,"mtime":1640212599192,"results":"33","hashOfConfig":"23"},{"size":2585,"mtime":1640215267107,"results":"34","hashOfConfig":"23"},{"size":1827,"mtime":1640212599192,"results":"35","hashOfConfig":"23"},{"size":1688,"mtime":1640251113809,"results":"36","hashOfConfig":"23"},{"size":2303,"mtime":1640252785957,"results":"37","hashOfConfig":"23"},{"size":2257,"mtime":1640212599192,"results":"38","hashOfConfig":"23"},{"size":4550,"mtime":1640213342818,"results":"39","hashOfConfig":"23"},{"size":1797,"mtime":1640254181621,"results":"40","hashOfConfig":"23"},{"size":2685,"mtime":1640212599192,"results":"41","hashOfConfig":"23"},{"size":2493,"mtime":1640212599192,"results":"42","hashOfConfig":"23"},{"size":2175,"mtime":1640254619264,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1blhfh7",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/index.js",[],["89","90"],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/reportWebVitals.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/App.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/personalDate.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/universitySection.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/Forum.js",["91"],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signIn/SignIn.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/AboutYourForm.js",["92","93"],"import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useStyles } from \"./universitySectionStyles\";\nimport { useHistory } from \"react-router-dom\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function AboutYouForm() {\n  let history = useHistory();\n  const [checked, setChecked] = React.useState([false, false]);\n  const [checked1, setChecked1] = React.useState([false, false]);\n  const [checked2, setChecked2] = React.useState([false, false]);\n  const [drench, setdrench] = React.useState(false);\n  const classes = useStyles();\n  const FieldTofilled = ({ question, fill }) => (\n    <div>\n      <Grid className={classes.chooseAvatarAndName}>\n        <Typography component=\"p\" variant=\"p\">\n          {question}\n        </Typography>\n        <TextField\n          className={classes.chooseName}\n          label={fill}\n          variant=\"outlined\"\n        />\n      </Grid>\n    </div>\n  );\n  const submitPersonForm = (e) => {\n    e.preventDefault();\n    history.push(\"/forum\");\n  };\n\n  const handleChangeCheckbox = (e) => {\n    if (e.target.value === \"1\") {\n      setChecked([false, true]);\n    } else {\n      setChecked([true, false]);\n    }\n  };\n  const handleChangeCheckbox1 = (e) => {\n    if (e.target.value === \"1\") {\n      setChecked1([false, true]);\n    } else {\n      setChecked1([true, false]);\n    }\n  };\n  const handleChangeCheckbox2 = (e) => {\n    if (e.target.value === \"1\") {\n      setChecked2([false, true]);\n      setdrench(false);\n    } else {\n      setChecked2([true, false]);\n      setdrench(true);\n    }\n  };\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <div className={classes.imageBackground}>\n        <Grid item className={classes.image} />\n      </div>{\" \"}\n      <Grid item component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <form onSubmit={submitPersonForm} className={classes.rightSide}>\n            <Typography className={classes.title}  component=\"h5\" variant=\"h3\">\n              Let's get to know each other better!\n            </Typography>\n\n            <div className={classes.oneLaneToFill}>\n              <div className={classes.selectYourPosition}>\n                <InputLabel>\n                  Do you have experience in giving tutoring / teaching?\n                </InputLabel>\n                <FormControlLabel\n                  value={0}\n                  checked={checked[0]}\n                  onChange={handleChangeCheckbox}\n                  className={classes.checkbox}\n                  control={<Checkbox />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={1}\n                  checked={checked[1]}\n                  onChange={handleChangeCheckbox}\n                  control={<Checkbox />}\n                  label=\"No\"\n                />\n              </div>\n            </div>\n            <div className={classes.oneLaneToFill}>\n              <div className={classes.selectYourPosition}>\n                <InputLabel>\n                  Have you ever failed any subject during your studies?\n                </InputLabel>\n                <FormControlLabel\n                  value={0}\n                  checked={checked2[0]}\n                  onChange={handleChangeCheckbox2}\n                  className={classes.checkbox}\n                  control={<Checkbox />}\n                  label=\"Yes\"\n                />\n                <FormControlLabel\n                  value={1}\n                  checked={checked2[1]}\n                  onChange={handleChangeCheckbox2}\n                  control={<Checkbox />}\n                  label=\"No\"\n                />\n              </div>\n            </div>\n            {drench && (\n              <>\n                <FieldTofilled\n                  question={\"What subject\"}\n                  fill={\"What subject\"}\n                />\n              </>\n            )}\n            <div className={classes.oneLaneToFill}>\n              <div className={classes.selectYourPosition}>\n                <InputLabel>\n                  What would you like to achieve with this application?{\" \"}\n                </InputLabel>\n\n                <TextField\n                  style={{ marginLeft: \"20px\", width: \"400px\" }}\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  name=\"password\"\n                  label=\"achieve\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n              </div>\n            </div>\n            <div className={classes.submitSection}>\n              <Button\n                type=\"submit\"\n                className={classes.submitButton}\n                variant=\"contained\"\n              >\n                Next\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/yourGroups/YourGroups.js",["94"],"import { Navbar } from \"../NavBar\";\nimport Groups from \"../global/Groups\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SubjectToChoose from \"../global/subjectToChoose\";\nconst useStyles = makeStyles((theme) => ({\n  containerOfGroups: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    gap: \"20px\",\n  },\n  titleOfGroupsSearching: {\n    marginTop: \"100px\",\n  },\n  groupsContainer: {\n    textAlign: \"center\",\n  },\n  submitButton: {\n    textAlign: \"center\",\n    background: theme.palette.primary.main,\n    width: \"200px\",\n    height: \"70px\",\n  },\n  submitButtonSection: {\n    position: \"absolute\",\n    top: \"100px\",\n    left: \"50px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    marginTop: \"100px\",\n    padding: \"40px\",\n    width: \"50vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"20px\",\n    alignItems: \"center\",\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  chooseName: {\n    width: \"40vw\",\n  },\n}));\nexport const YourGroups = () => {\n  const classes = useStyles();\n  const [createGroupStatus, setCreateGroupStatus] = useState(true);\n  const [yourGroups, setYourGroups] = useState([\n    {\n      title: \"Mathematical Discrete\",\n      question:\n        \"We study math in our sophomore year and it's super cool on campus on Fridays Saturdays online\",\n      btnText: \"leave the group\",\n    },\n    {\n      title: \"Mathematical \",\n      question:\n        \"We study math in our sophomore year and it's super cool on campus on Fridays Saturdays online\",\n      btnText: \"leave the group\",\n    },\n    {\n      title: \"Mathematical Discrete\",\n      question:\n        \"We study math in our sophomore year and it's super cool on campus on Fridays Saturdays online\",\n      btnText: \"leave the group\",\n    },\n  ]);\n  const deleteGroup = (e) => {\n    let allGroups = yourGroups;\n    allGroups = allGroups.filter((item, index) => {\n      if (index.toString() !== e.currentTarget.id.toString()) {\n        return item;\n      }\n    });\n    setYourGroups(allGroups);\n  };\n  const createGroupOpenModal = () => {\n    createGroupStatus\n      ? setCreateGroupStatus(false)\n      : setCreateGroupStatus(true);\n  };\n  return (\n    <>\n      <Navbar />\n      <div className={classes.submitButtonSection}>\n        <Button\n          onClick={createGroupOpenModal}\n          className={classes.submitButton}\n          variant=\"contained\"\n        >\n          Create a new group\n        </Button>\n      </div>\n      {createGroupStatus && (\n        <>\n          <div className={classes.groupsContainer}>\n            <Typography\n              className={classes.titleOfGroupsSearching}\n              component=\"h1\"\n              variant=\"h2\"\n            >\n              Your Groups{\" \"}\n            </Typography>\n          </div>\n          <div className={classes.containerOfGroups}>\n            {yourGroups.map((item, index) => {\n              return (\n                <Groups\n                  key={index}\n                  idOfButton={index}\n                  question={item.question}\n                  title={item.title}\n                  btnText={item.btnText}\n                  groupEvent={deleteGroup}\n                />\n              );\n            })}\n          </div>\n        </>\n      )}\n      {!createGroupStatus && (\n        <>\n          <div className={classes.container}>\n            <Paper className={classes.paper} elevation={6}>\n              <Typography component=\"h1\" variant=\"h4\">\n                Create the new Group{\" \"}\n              </Typography>\n              <TextField\n                className={classes.chooseName}\n                label=\"Tittle of your group\"\n                variant=\"outlined\"\n                name={\"title\"}\n              />\n              <TextField\n                className={classes.chooseName}\n                label=\"Describe your group?\"\n                variant=\"outlined\"\n                name={\"question\"}\n                multiline\n                rows={3}\n                rowsMax={6}\n              />\n              <TextField\n                className={classes.chooseName}\n                label=\"ADD HASZTAGS!\"\n                variant=\"outlined\"\n                name={\"hasztag\"}\n              />\n              <SubjectToChoose />\n              <Button onClick={createGroupOpenModal}variant=\"contained\">Submit </Button>\n            </Paper>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n","/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/searchingGroups/SearchingGroups.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/personalDateStyles.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signUp/universitySectionStyles.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/Post.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/ForumLook.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/NavBar.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/ModalToCreatePost.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/signIn/SignInLook.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/searchingGroups/ModalSearching.js",["95","96","97"],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/global/Groups.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/global/subjectToChoose.js",[],"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/global/ToolBar.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"106","line":17,"column":10,"nodeType":"104","messageId":"105","endLine":17,"endColumn":18},{"ruleId":"102","severity":1,"message":"107","line":47,"column":9,"nodeType":"104","messageId":"105","endLine":47,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":77,"column":48,"nodeType":"110","messageId":"111","endLine":77,"endColumn":50},{"ruleId":"102","severity":1,"message":"112","line":40,"column":10,"nodeType":"104","messageId":"105","endLine":40,"endColumn":22},{"ruleId":"102","severity":1,"message":"113","line":41,"column":10,"nodeType":"104","messageId":"105","endLine":41,"endColumn":20},{"ruleId":"102","severity":1,"message":"114","line":43,"column":9,"nodeType":"104","messageId":"105","endLine":43,"endColumn":21},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'checked1' is assigned a value but never used.","'handleChangeCheckbox1' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'generalState' is assigned a value but never used.","'topicState' is assigned a value but never used.","'handleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]