{"ast":null,"code":"var _jsxFileName = \"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/Forum.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Navbar } from \"../NavBar\";\nimport { Button } from \"@material-ui/core/\";\nimport { useStyles } from \"./ForumLook\";\nimport Post from \"./Post\";\nimport ModalToCreatePost from \"./ModalToCreatePost\";\nimport { useState } from \"react\";\nimport Hamburger from 'hamburger-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Forum() {\n  _s();\n\n  const [modalStatus, setModalStatus] = useState(false);\n  const [stateOfPosts, setStateOfPosts] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    console.log(stateOfPosts);\n  }, []);\n\n  const openModal = () => {\n    modalStatus ? setModalStatus(false) : setModalStatus(true);\n  };\n\n  const openMenu = () => {\n    console.log(\"xd\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hamburger, {\n      className: classes.hamburgerMenu,\n      onClick: openMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.forum,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: openModal,\n        className: classes.submitButton,\n        variant: \"contained\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), modalStatus && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ModalToCreatePost, {\n          setStateOfPosts: setStateOfPosts,\n          stateOfPosts: stateOfPosts,\n          setState: setModalStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), !modalStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.containerOfPost,\n        children: [/*#__PURE__*/_jsxDEV(Post, {\n          userName: \"Patryk Kowalski\",\n          title: \"What do you think about Pitagoras?\",\n          question: \"Does his statement work in all cases? Even if we take quantum space?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), console.log(stateOfPosts), stateOfPosts.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Post, {\n            userName: \"Kamil Plewka\",\n            title: item.title,\n            question: item.question\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Forum, \"HiDteLzrZ91ke/WnPdYCYhbfZEY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Forum;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forum\");","map":{"version":3,"sources":["/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/Forum.js"],"names":["React","useEffect","Navbar","Button","useStyles","Post","ModalToCreatePost","useState","Hamburger","Forum","modalStatus","setModalStatus","stateOfPosts","setStateOfPosts","classes","console","log","openModal","openMenu","hamburgerMenu","forum","submitButton","containerOfPost","map","item","index","title","question"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AAIA,QAAMO,OAAO,GAAGV,SAAS,EAAzB;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMK,SAAS,GAAG,MAAM;AACtBP,IAAAA,WAAW,GAAGC,cAAc,CAAC,KAAD,CAAjB,GAA2BA,cAAc,CAAC,IAAD,CAApD;AACD,GAFD;;AAGA,QAAMO,QAAQ,GAAC,MAAI;AACjBH,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAEF,OAAO,CAACK,aAA9B;AAA4C,MAAA,OAAO,EAAED;AAArD;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACM,KAAxB;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAEH,SADX;AAEE,QAAA,SAAS,EAAEH,OAAO,CAACO,YAFrB;AAGE,QAAA,OAAO,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAQGX,WAAW,iBACV;AAAA,+BACE,QAAC,iBAAD;AACE,UAAA,eAAe,EAAEG,eADnB;AAEE,UAAA,YAAY,EAAED,YAFhB;AAGE,UAAA,QAAQ,EAAED;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF,uBATJ,EAiBG,CAACD,WAAD,iBACC;AAAK,QAAA,SAAS,EAAEI,OAAO,CAACQ,eAAxB;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,QAAQ,EAAE,iBADZ;AAGI,UAAA,KAAK,EAAG,oCAHZ;AAII,UAAA,QAAQ,EACL;AALP;AAAA;AAAA;AAAA;AAAA,gBADF,EASGP,OAAO,CAACC,GAAR,CAAYJ,YAAZ,CATH,EAUGA,YAAY,CAACW,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,8BACE,QAAC,IAAD;AACE,YAAA,QAAQ,EAAE,cADZ;AAGE,YAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,YAAA,QAAQ,EAAEF,IAAI,CAACG;AAJjB,aAEOF,KAFP;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATA,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAgDD;;GAhEuBhB,K;UAMNL,S;;;KANMK,K","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Navbar } from \"../NavBar\";\nimport { Button } from \"@material-ui/core/\";\nimport { useStyles } from \"./ForumLook\";\nimport Post from \"./Post\";\nimport ModalToCreatePost from \"./ModalToCreatePost\";\nimport { useState } from \"react\";\nimport Hamburger from 'hamburger-react'\n\nexport default function Forum() {\n  const [modalStatus, setModalStatus] = useState(false);\n  const [stateOfPosts, setStateOfPosts] = useState([\n   \n  ]);\n\n  const classes = useStyles();\n  useEffect(() => {\n    console.log(stateOfPosts);\n  }, []);\n  const openModal = () => {\n    modalStatus ? setModalStatus(false) : setModalStatus(true);\n  };\n  const openMenu=()=>{\n    console.log(\"xd\")\n  }\n  return (\n    <>\n      <Navbar />\n      <Hamburger className={classes.hamburgerMenu}onClick={openMenu}/>\n\n      <div className={classes.forum}>\n        <Button\n          onClick={openModal}\n          className={classes.submitButton}\n          variant=\"contained\"\n        >\n          Create Post\n        </Button>\n        {modalStatus && (\n          <>\n            <ModalToCreatePost\n              setStateOfPosts={setStateOfPosts}\n              stateOfPosts={stateOfPosts}\n              setState={setModalStatus}\n            />\n          </>\n        )}\n        {!modalStatus && (\n          <div className={classes.containerOfPost}>\n            <Post\n              userName={\"Patryk Kowalski\"}\n              \n                title= {\"What do you think about Pitagoras?\"}\n                question=\n                  {\"Does his statement work in all cases? Even if we take quantum space?\"}\n                      \n            />\n            {console.log(stateOfPosts)}\n            {stateOfPosts.map((item, index) => {\n              return (\n                <Post\n                  userName={\"Kamil Plewka\"}\n                  key={index}\n                  title={item.title}\n                  question={item.question}\n                />\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}