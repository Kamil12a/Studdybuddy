{"ast":null,"code":"var _jsxFileName = \"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/yourGroups/YourGroups.js\",\n    _s = $RefreshSig$();\n\nimport { Navbar } from \"../NavBar\";\nimport Groups from \"../global/Groups\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SubjectToChoose from \"../global/subjectToChoose\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  containerOfGroups: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    gap: \"20px\",\n    [theme.breakpoints.down(780)]: {\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    }\n  },\n  titleOfGroupsSearching: {\n    marginTop: \"100px\",\n    [theme.breakpoints.down(780)]: {\n      marginTop: \"60px\"\n    }\n  },\n  groupsContainer: {\n    textAlign: \"center\"\n  },\n  submitButton: {\n    textAlign: \"center\",\n    background: theme.palette.primary.main,\n    width: \"200px\",\n    height: \"70px\",\n    [theme.breakpoints.down(780)]: {\n      display: \"none\"\n    }\n  },\n  submitButtonSection: {\n    position: \"absolute\",\n    top: \"100px\",\n    left: \"50px\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    marginTop: \"100px\",\n    padding: \"40px\",\n    width: \"50vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"20px\",\n    alignItems: \"center\"\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  chooseName: {\n    width: \"40vw\"\n  }\n}));\nexport const YourGroups = () => {\n  _s();\n\n  const classes = useStyles();\n  const [createGroupStatus, setCreateGroupStatus] = useState(true);\n  const [yourGroups, setYourGroups] = useState([{\n    title: \"Mathematical Discrete\",\n    question: \"We study math in our sophomore year and it's super cool on campus on Fridays Saturdays online\",\n    btnText: \"leave the group\"\n  }, {\n    title: \"Mathematical \",\n    question: \"We study math in our sophomore year and it's super cool on campus on Fridays Saturdays online\",\n    btnText: \"leave the group\"\n  }, {\n    title: \"Mathematical Discrete\",\n    question: \"We study math in our sophomore year and it's super cool on campus on Fridays Saturdays online\",\n    btnText: \"leave the group\"\n  }]);\n\n  const deleteGroup = e => {\n    let allGroups = yourGroups;\n    allGroups = allGroups.filter((item, index) => {\n      if (index.toString() !== e.currentTarget.id.toString()) {\n        return item;\n      }\n    });\n    setYourGroups(allGroups);\n  };\n\n  const createGroupOpenModal = () => {\n    createGroupStatus ? setCreateGroupStatus(false) : setCreateGroupStatus(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.submitButtonSection,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: createGroupOpenModal,\n        className: classes.submitButton,\n        variant: \"contained\",\n        children: \"Create a new group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), createGroupStatus && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.groupsContainer,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.titleOfGroupsSearching,\n          component: \"h1\",\n          variant: \"h2\",\n          children: [\"Your Groups\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.containerOfGroups,\n        children: yourGroups.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Groups, {\n            idOfButton: index,\n            question: item.question,\n            title: item.title,\n            btnText: item.btnText,\n            groupEvent: deleteGroup\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), !createGroupStatus && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          elevation: 6,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h4\",\n            children: [\"Create the new Group\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.chooseName,\n            label: \"Tittle of your group\",\n            variant: \"outlined\",\n            name: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.chooseName,\n            label: \"Describe your group?\",\n            variant: \"outlined\",\n            name: \"question\",\n            multiline: true,\n            rows: 3,\n            rowsMax: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.chooseName,\n            label: \"ADD HASZTAGS!\",\n            variant: \"outlined\",\n            name: \"hasztag\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SubjectToChoose, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: createGroupOpenModal,\n            variant: \"contained\",\n            children: [\"Submit\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(YourGroups, \"ivH7r5PWblHGLiGDB6E+1y/UDnI=\", false, function () {\n  return [useStyles];\n});\n\n_c = YourGroups;\n\nvar _c;\n\n$RefreshReg$(_c, \"YourGroups\");","map":{"version":3,"sources":["/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/yourGroups/YourGroups.js"],"names":["Navbar","Groups","makeStyles","Typography","useState","Button","Paper","TextField","SubjectToChoose","useStyles","theme","containerOfGroups","display","justifyContent","gap","breakpoints","down","flexDirection","alignItems","titleOfGroupsSearching","marginTop","groupsContainer","textAlign","submitButton","background","palette","primary","main","width","height","submitButtonSection","position","top","left","paper","padding","container","chooseName","YourGroups","classes","createGroupStatus","setCreateGroupStatus","yourGroups","setYourGroups","title","question","btnText","deleteGroup","e","allGroups","filter","item","index","toString","currentTarget","id","createGroupOpenModal","map"],"mappings":"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","sourcesContent":["import { Navbar } from \"../NavBar\";\nimport Groups from \"../global/Groups\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SubjectToChoose from \"../global/subjectToChoose\";\nconst useStyles = makeStyles((theme) => ({\n  containerOfGroups: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    gap: \"20px\",\n    [theme.breakpoints.down(780)]: {\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n  },\n  titleOfGroupsSearching: {\n    marginTop: \"100px\",\n    [theme.breakpoints.down(780)]: {\n      marginTop: \"60px\",\n    },\n  },\n  groupsContainer: {\n    textAlign: \"center\",\n  },\n  submitButton: {\n    textAlign: \"center\",\n    background: theme.palette.primary.main,\n    width: \"200px\",\n    height: \"70px\",\n    [theme.breakpoints.down(780)]: {\n      display: \"none\",\n    },\n  },\n  submitButtonSection: {\n    position: \"absolute\",\n    top: \"100px\",\n    left: \"50px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  paper: {\n    marginTop: \"100px\",\n    padding: \"40px\",\n    width: \"50vw\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"20px\",\n    alignItems: \"center\",\n  },\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  chooseName: {\n    width: \"40vw\",\n  },\n}));\nexport const YourGroups = () => {\n  const classes = useStyles();\n  const [createGroupStatus, setCreateGroupStatus] = useState(true);\n  const [yourGroups, setYourGroups] = useState([\n    {\n      title: \"Mathematical Discrete\",\n      question:\n        \"We study math in our sophomore year and it's super cool on campus on Fridays Saturdays online\",\n      btnText: \"leave the group\",\n    },\n    {\n      title: \"Mathematical \",\n      question:\n        \"We study math in our sophomore year and it's super cool on campus on Fridays Saturdays online\",\n      btnText: \"leave the group\",\n    },\n    {\n      title: \"Mathematical Discrete\",\n      question:\n        \"We study math in our sophomore year and it's super cool on campus on Fridays Saturdays online\",\n      btnText: \"leave the group\",\n    },\n  ]);\n  const deleteGroup = (e) => {\n    let allGroups = yourGroups;\n    allGroups = allGroups.filter((item, index) => {\n      if (index.toString() !== e.currentTarget.id.toString()) {\n        return item;\n      }\n    });\n    setYourGroups(allGroups);\n  };\n  const createGroupOpenModal = () => {\n    createGroupStatus\n      ? setCreateGroupStatus(false)\n      : setCreateGroupStatus(true);\n  };\n  return (\n    <>\n      <Navbar />\n      <div className={classes.submitButtonSection}>\n        <Button\n          onClick={createGroupOpenModal}\n          className={classes.submitButton}\n          variant=\"contained\"\n        >\n          Create a new group\n        </Button>\n      </div>\n      {createGroupStatus && (\n        <>\n          <div className={classes.groupsContainer}>\n            <Typography\n              className={classes.titleOfGroupsSearching}\n              component=\"h1\"\n              variant=\"h2\"\n            >\n              Your Groups{\" \"}\n            </Typography>\n          </div>\n          <div className={classes.containerOfGroups}>\n            {yourGroups.map((item, index) => {\n              return (\n                <Groups\n                  key={index}\n                  idOfButton={index}\n                  question={item.question}\n                  title={item.title}\n                  btnText={item.btnText}\n                  groupEvent={deleteGroup}\n                />\n              );\n            })}\n          </div>\n        </>\n      )}\n      {!createGroupStatus && (\n        <>\n          <div className={classes.container}>\n            <Paper className={classes.paper} elevation={6}>\n              <Typography component=\"h1\" variant=\"h4\">\n                Create the new Group{\" \"}\n              </Typography>\n              <TextField\n                className={classes.chooseName}\n                label=\"Tittle of your group\"\n                variant=\"outlined\"\n                name={\"title\"}\n              />\n              <TextField\n                className={classes.chooseName}\n                label=\"Describe your group?\"\n                variant=\"outlined\"\n                name={\"question\"}\n                multiline\n                rows={3}\n                rowsMax={6}\n              />\n              <TextField\n                className={classes.chooseName}\n                label=\"ADD HASZTAGS!\"\n                variant=\"outlined\"\n                name={\"hasztag\"}\n              />\n              <SubjectToChoose />\n              <Button onClick={createGroupOpenModal} variant=\"contained\">\n                Submit{\" \"}\n              </Button>\n            </Paper>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}