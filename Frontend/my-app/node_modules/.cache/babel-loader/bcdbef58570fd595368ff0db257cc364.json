{"ast":null,"code":"var _jsxFileName = \"/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/Forum.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { Navbar } from \"../NavBar\";\nimport { Button } from \"@material-ui/core/\";\nimport { useStyles } from \"./ForumLook\";\nimport Post from \"./Post\";\nimport ModalToCreatePost from \"./ModalToCreatePost\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Forum() {\n  _s();\n\n  const [modalStatus, setModalStatus] = useState(false);\n  const [stateOfPosts, setStateOfPosts] = useState([]);\n  const [menuStatus, setMenuStatus] = useState(false);\n  const forumBackground = useRef();\n  const classes = useStyles();\n\n  const openModal = () => {\n    modalStatus ? setModalStatus(false) : setModalStatus(true);\n  };\n\n  const openMenu = () => {\n    if (!menuStatus) {\n      setMenuStatus(true);\n      forumBackground.current.style.backgroundColor = \"red\";\n      forumBackground.current.style.position = \"absolute\";\n    } else {\n      setMenuStatus(false);\n      forumBackground.current.style.backgroundColor = \"white\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      openMenu: openMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: forumBackground,\n      className: classes.forum,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: openModal,\n        className: classes.submitButton,\n        variant: \"contained\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), modalStatus && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ModalToCreatePost, {\n          setStateOfPosts: setStateOfPosts,\n          stateOfPosts: stateOfPosts,\n          setState: setModalStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), !modalStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.containerOfPost,\n        children: [/*#__PURE__*/_jsxDEV(Post, {\n          userName: \"Patryk Kowalski\",\n          title: \"What do you think about Pitagoras?\",\n          question: \"Does his statement work in all cases? Even if we take quantum space?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), console.log(stateOfPosts), stateOfPosts.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Post, {\n            userName: \"Kamil Plewka\",\n            title: item.title,\n            question: item.question\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Forum, \"jDCpumh69Ni8X8FKMjJfT1uSOWY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Forum;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forum\");","map":{"version":3,"sources":["/home/kamil/Pulpit/konkurs/my-app/Frontend/my-app/src/components/forum/Forum.js"],"names":["React","useEffect","useRef","Navbar","Button","useStyles","Post","ModalToCreatePost","useState","Forum","modalStatus","setModalStatus","stateOfPosts","setStateOfPosts","menuStatus","setMenuStatus","forumBackground","classes","openModal","openMenu","current","style","backgroundColor","position","forum","submitButton","containerOfPost","console","log","map","item","index","title","question"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMQ,eAAe,GAAGd,MAAM,EAA9B;AACA,QAAMe,OAAO,GAAGZ,SAAS,EAAzB;;AACA,QAAMa,SAAS,GAAG,MAAM;AACtBR,IAAAA,WAAW,GAAGC,cAAc,CAAC,KAAD,CAAjB,GAA2BA,cAAc,CAAC,IAAD,CAApD;AACD,GAFD;;AAGA,QAAMQ,QAAQ,GAAG,MAAM;AACrB,QAAI,CAACL,UAAL,EAAiB;AACfC,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAC,MAAAA,eAAe,CAACI,OAAhB,CAAwBC,KAAxB,CAA8BC,eAA9B,GAAgD,KAAhD;AACAN,MAAAA,eAAe,CAACI,OAAhB,CAAwBC,KAAxB,CAA8BE,QAA9B,GAAuC,UAAvC;AACD,KAJD,MAKI;AACFR,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,MAAAA,eAAe,CAACI,OAAhB,CAAwBC,KAAxB,CAA8BC,eAA9B,GAAgD,OAAhD;AACD;AACF,GAVD;;AAWA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAEH,eAAV;AAA2B,MAAA,SAAS,EAAEC,OAAO,CAACO,KAA9C;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAEN,SADX;AAEE,QAAA,SAAS,EAAED,OAAO,CAACQ,YAFrB;AAGE,QAAA,OAAO,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAQGf,WAAW,iBACV;AAAA,+BACE,QAAC,iBAAD;AACE,UAAA,eAAe,EAAEG,eADnB;AAEE,UAAA,YAAY,EAAED,YAFhB;AAGE,UAAA,QAAQ,EAAED;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF,uBATJ,EAiBG,CAACD,WAAD,iBACC;AAAK,QAAA,SAAS,EAAEO,OAAO,CAACS,eAAxB;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,QAAQ,EAAE,iBADZ;AAEE,UAAA,KAAK,EAAE,oCAFT;AAGE,UAAA,QAAQ,EACN;AAJJ;AAAA;AAAA;AAAA;AAAA,gBADF,EAQGC,OAAO,CAACC,GAAR,CAAYhB,YAAZ,CARH,EASGA,YAAY,CAACiB,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,8BACE,QAAC,IAAD;AACE,YAAA,QAAQ,EAAE,cADZ;AAGE,YAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,YAAA,QAAQ,EAAEF,IAAI,CAACG;AAJjB,aAEOF,KAFP;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATA,CATH;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA6CD;;GAjEuBtB,K;UAKNJ,S;;;KALMI,K","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { Navbar } from \"../NavBar\";\nimport { Button } from \"@material-ui/core/\";\nimport { useStyles } from \"./ForumLook\";\nimport Post from \"./Post\";\nimport ModalToCreatePost from \"./ModalToCreatePost\";\nimport { useState } from \"react\";\n\nexport default function Forum() {\n  const [modalStatus, setModalStatus] = useState(false);\n  const [stateOfPosts, setStateOfPosts] = useState([]);\n  const [menuStatus, setMenuStatus] = useState(false);\n  const forumBackground = useRef();\n  const classes = useStyles();\n  const openModal = () => {\n    modalStatus ? setModalStatus(false) : setModalStatus(true);\n  };\n  const openMenu = () => {\n    if (!menuStatus) {\n      setMenuStatus(true);\n      forumBackground.current.style.backgroundColor = \"red\";\n      forumBackground.current.style.position=\"absolute\"\n    }\n    else{\n      setMenuStatus(false);\n      forumBackground.current.style.backgroundColor = \"white\";\n    }\n  };\n  return (\n    <>\n      <Navbar openMenu={openMenu} />\n      <div ref={forumBackground} className={classes.forum}>\n        <Button\n          onClick={openModal}\n          className={classes.submitButton}\n          variant=\"contained\"\n        >\n          Create Post\n        </Button>\n        {modalStatus && (\n          <>\n            <ModalToCreatePost\n              setStateOfPosts={setStateOfPosts}\n              stateOfPosts={stateOfPosts}\n              setState={setModalStatus}\n            />\n          </>\n        )}\n        {!modalStatus && (\n          <div className={classes.containerOfPost}>\n            <Post\n              userName={\"Patryk Kowalski\"}\n              title={\"What do you think about Pitagoras?\"}\n              question={\n                \"Does his statement work in all cases? Even if we take quantum space?\"\n              }\n            />\n            {console.log(stateOfPosts)}\n            {stateOfPosts.map((item, index) => {\n              return (\n                <Post\n                  userName={\"Kamil Plewka\"}\n                  key={index}\n                  title={item.title}\n                  question={item.question}\n                />\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}