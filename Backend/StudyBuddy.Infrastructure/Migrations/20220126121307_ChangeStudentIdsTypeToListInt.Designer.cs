// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudyBuddy.Infrastructure;

namespace StudyBuddy.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220126121307_ChangeStudentIdsTypeToListInt")]
    partial class ChangeStudentIdsTypeToListInt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("StudyBuddy.Domain.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("TutorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.GroupProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("GroupProperties");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("GroupPropertyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupPropertyId")
                        .IsUnique();

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId")
                        .IsUnique();

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Course")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.UserProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserProperties");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.Group", b =>
                {
                    b.HasOne("StudyBuddy.Domain.Models.User", "User")
                        .WithMany("Groups")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.GroupProperty", b =>
                {
                    b.HasOne("StudyBuddy.Domain.Models.Group", "Group")
                        .WithOne("GroupProperty")
                        .HasForeignKey("StudyBuddy.Domain.Models.GroupProperty", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.Post", b =>
                {
                    b.HasOne("StudyBuddy.Domain.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.Subject", b =>
                {
                    b.HasOne("StudyBuddy.Domain.Models.GroupProperty", "GroupProperty")
                        .WithOne("Subject")
                        .HasForeignKey("StudyBuddy.Domain.Models.Subject", "GroupPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupProperty");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.Topic", b =>
                {
                    b.HasOne("StudyBuddy.Domain.Models.Subject", "Subject")
                        .WithOne("Topic")
                        .HasForeignKey("StudyBuddy.Domain.Models.Topic", "SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.User", b =>
                {
                    b.HasOne("StudyBuddy.Domain.Models.Group", null)
                        .WithMany("StudentIds")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.UserProperty", b =>
                {
                    b.HasOne("StudyBuddy.Domain.Models.User", "User")
                        .WithOne("UserProperty")
                        .HasForeignKey("StudyBuddy.Domain.Models.UserProperty", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.Group", b =>
                {
                    b.Navigation("GroupProperty");

                    b.Navigation("StudentIds");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.GroupProperty", b =>
                {
                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.Subject", b =>
                {
                    b.Navigation("Topic");
                });

            modelBuilder.Entity("StudyBuddy.Domain.Models.User", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("Posts");

                    b.Navigation("UserProperty");
                });
#pragma warning restore 612, 618
        }
    }
}
